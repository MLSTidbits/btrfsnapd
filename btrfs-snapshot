#!/bin/env bash

# btrfs-snapshot copyright (c) 2024 by <mschaecher78@gmail.com> Michael L. Schaecher - MIT License

# This script creates a btrfs snapshot of the root filesystem and deletes old snapshots helping
# keep data usage manageable.

# Log all output to syslog
function sysLog () { logger -t btrfs-snapshot "$@" ; }

function takeSnapshot () {

    shift

    while true ; do case "${1}" in
        -h|--help ) echo "${helpInfo}" ; cat help-create.txt ; exit 0 ;;
    esac ; shift ; done

}

set -eo pipefail

# shellcheck disable=SC1091
source /etc/btrfs-snapshot.conf || {
    sysLog "Configuration file /etc/btrfs-snapshot.conf not found" ; exit 1
}

test ! -f /etc/os-release || source /etc/os-release

_appName="btrfs-snapshot"
_appVersion="$(cat /usr/share/doc/btrfs-snapshot/version || echo "unknown")"

# Default values for general snapshot for the root filesystem
_distroName="${DISTRO_NAME:-$NAME}"
_snapshotType="${SNAPSHOT_TYPE:-root}"

_snapshotDir="${SNAPSHOT_DIR:-/.snapshots}"
_setDate="${SET_DATE:-true}"
_readOnly="${READ_ONLY:-false}"

_licenseInfo="$(cat << EOF
$_appName - Copyright (c) 2024 by Michael L. Schaecher <MichaelLeeSchaecher@gmail.com> under the terms
of the GPLv3 License or later.
EOF
)"

# How many snapshots to keep. This should be keep low to avoid using too much disk space.
_totalCount="${TOTAL_COUNT:-7}"
versionInfo="$(cat << EOF
${_appName} [ version ${_appVersion} ] - ${_distroName}
EOF
)"

helpInfo="$(cat << EOF
${versionInfo}

Usage: ${_appName} [options] <flags> arg...

Options:
    create                      Create a new snapshot based on configured settings: [use -h, --help for more options].
    delete                      Delete a snapshot based on configured settings: [use -h, --help for more options].
    restore                     Restore a subvolume to a previous state: [use -h, --help for more options].
    list                        List all snapshots in the snapshot directory.
    help                        Show this help message.
    version                     Show version information.


EOF
)"

case "${1}" in
    create                  ) takeSnapshot "${@}"                        ;;
    help                    ) echo "${helpInfo}" ; cat help.txt ; exit 0 ;;
    version                 ) echo "${versionInfo}" ; exit 0             ;;
    *                       ) echo "Invalid argument: ${1}"; exit 1      ;;
esac

# Delete snapshots exceeding the total to keep
while true ; do

    OLD_SNAPSHOTS="$(btrfs su list -o --sort=ogen "${SNAPSHOT_DIR}" | awk -F'/' 'NR==1 {print $2}')"

    # Using the find command is better then ls, however the one less snapshot is kept.
    # Need to add 1 to the TOTAL_KEEP variable to keep the correct number of snapshots.
    TOTAL_KEEP=$((TOTAL_KEEP + 1))

    SNAPSHOT_LIST="$(find "${SNAPSHOT_DIR}" -maxdepth 1 -type d | wc -l)"

    if test "${SNAPSHOT_LIST}" -gt "${TOTAL_KEEP}" ; then
        btrfs su delete "${SNAPSHOT_DIR}/${OLD_SNAPSHOTS}" || { sysLog "Failed to delete snapshot" ; exit 1; }
    else
        break
    fi

done

echo "done" ; exit 0
